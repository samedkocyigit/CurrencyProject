<<<<<<< HEAD
version: '3'

services:
=======
ï»¿services:
>>>>>>> 9f4056f (last update)
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    
  businessapi:
    image: currencyproject-bussinessapi
    container_name: businessapi-container
    build:
      context: .
<<<<<<< HEAD
      dockerfile: BussinessAPI/Dockerfile
=======
      dockerfile: BusinessAPI/Dockerfile
>>>>>>> 9f4056f (last update)
    ports:
      - "8081:81"
    environment:
      - ASPNETCORE_URLS=http://+:81
      - ASPNETCORE_ENVIRONMENT=Development
      - REDIS_CONNECTION=redis:6379  
    depends_on:
      - redis

  currencywebsite:
    build:
      context: .
      dockerfile: ./CurrencyWebSite/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - businessapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - API_URL=http://businessapi:81/api

  dataapi:
    image: currencyproject-dataapi
    container_name: dataapi-container
    build:
      context: .
      dockerfile: DataAPI/Dockerfile 
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-db;username=postgres;password=samed123;database=CurrencyProject; TrustServerCertificate=true; 
    depends_on:
      - postgres-db 

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: CurrencyProject
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: samed123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "CurrencyProject"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s


networks:
  default:
    name: my_custom_network

volumes:
<<<<<<< HEAD
  pgdata:
=======
  pgdata:
>>>>>>> 9f4056f (last update)
